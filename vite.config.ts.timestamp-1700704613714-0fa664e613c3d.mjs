// vite.config.ts
import { defineConfig } from "file:///D:/myProject/visualization-collection-vue/node_modules/vite/dist/node/index.js";
import vue from "file:///D:/myProject/visualization-collection-vue/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import Components from "file:///D:/myProject/visualization-collection-vue/node_modules/unplugin-vue-components/dist/vite.mjs";
import { AntDesignVueResolver } from "file:///D:/myProject/visualization-collection-vue/node_modules/unplugin-vue-components/dist/resolvers.mjs";
import fs from "fs";
import path from "path";
import { createSvgIconsPlugin } from "file:///D:/myProject/visualization-collection-vue/node_modules/vite-plugin-svg-icons/dist/index.mjs";
var appDirectory = fs.realpathSync(process.cwd());
var resolveApp = (relativePath) => path.resolve(appDirectory, relativePath);
var vite_config_default = defineConfig({
  build: {
    outDir: "docs",
    sourcemap: false
  },
  publicDir: "public",
  resolve: {
    extensions: [".ts", ".js"],
    alias: {
      "@": resolveApp("src"),
      pages: resolveApp("src/pages"),
      components: resolveApp("src/components"),
      constants: resolveApp("src/constants"),
      images: resolveApp("src/images"),
      utils: resolveApp("src/utils"),
      router: resolveApp("src/router"),
      hooks: resolveApp("src/hooks")
    }
  },
  css: {
    preprocessorOptions: {
      scss: {
        additionalData: `@import "src/global.scss";`
      }
    }
  },
  plugins: [
    vue(),
    createSvgIconsPlugin({
      // 指定需要缓存的图标文件夹
      iconDirs: [path.resolve(process.cwd(), "src/images/svg")],
      // 指定symbolId格式
      symbolId: "icon-[dir]-[name]"
    }),
    Components({
      resolvers: [AntDesignVueResolver({ importStyle: false })]
    })
  ],
  server: {
    port: 3002,
    open: true
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFxteVByb2plY3RcXFxcdmlzdWFsaXphdGlvbi1jb2xsZWN0aW9uLXZ1ZVwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiRDpcXFxcbXlQcm9qZWN0XFxcXHZpc3VhbGl6YXRpb24tY29sbGVjdGlvbi12dWVcXFxcdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L215UHJvamVjdC92aXN1YWxpemF0aW9uLWNvbGxlY3Rpb24tdnVlL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcclxuaW1wb3J0IHZ1ZSBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tdnVlXCI7XHJcbmltcG9ydCBDb21wb25lbnRzIGZyb20gXCJ1bnBsdWdpbi12dWUtY29tcG9uZW50cy92aXRlXCI7XHJcbmltcG9ydCB7IEFudERlc2lnblZ1ZVJlc29sdmVyIH0gZnJvbSBcInVucGx1Z2luLXZ1ZS1jb21wb25lbnRzL3Jlc29sdmVyc1wiO1xyXG5pbXBvcnQgZnMgZnJvbSBcImZzXCI7XHJcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XHJcbmltcG9ydCB7IGNyZWF0ZVN2Z0ljb25zUGx1Z2luIH0gZnJvbSBcInZpdGUtcGx1Z2luLXN2Zy1pY29uc1wiO1xyXG5cclxuLyoqXHJcbiAqIFx1ODNCN1x1NTNENiBOb2RlLmpzIFx1OEZEQlx1N0EwQlx1NzY4NFx1NUY1M1x1NTI0RFx1NURFNVx1NEY1Q1x1NzZFRVx1NUY1NVx1NzY4NFx1N0VERFx1NUJGOVx1OERFRlx1NUY4NFxyXG4gKi9cclxuY29uc3QgYXBwRGlyZWN0b3J5ID0gZnMucmVhbHBhdGhTeW5jKHByb2Nlc3MuY3dkKCkpO1xyXG5cclxuLyoqXHJcbiAqIFx1OEZENFx1NTZERVx1NzZGOFx1NUJGOVx1NEU4RVx1NUY1M1x1NTI0RFx1NURFNVx1NEY1Q1x1NzZFRVx1NUY1NVx1NzY4NFx1N0VERFx1NUJGOVx1OERFRlx1NUY4NFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gcmVsYXRpdmVQYXRoICBcdTk3MDBcdTg5ODFcdThGRDRcdTU2REVcdTc2ODRcdTc2RUVcdTVGNTVcclxuICogQHJldHVybnNcclxuICovXHJcbmNvbnN0IHJlc29sdmVBcHAgPSAocmVsYXRpdmVQYXRoKSA9PiBwYXRoLnJlc29sdmUoYXBwRGlyZWN0b3J5LCByZWxhdGl2ZVBhdGgpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcclxuICBidWlsZDoge1xyXG4gICAgb3V0RGlyOiBcImRvY3NcIixcclxuICAgIHNvdXJjZW1hcDogZmFsc2UsXHJcbiAgfSxcclxuICBwdWJsaWNEaXI6IFwicHVibGljXCIsXHJcbiAgcmVzb2x2ZToge1xyXG4gICAgZXh0ZW5zaW9uczogW1wiLnRzXCIsIFwiLmpzXCJdLFxyXG4gICAgYWxpYXM6IHtcclxuICAgICAgXCJAXCI6IHJlc29sdmVBcHAoXCJzcmNcIiksXHJcbiAgICAgIHBhZ2VzOiByZXNvbHZlQXBwKFwic3JjL3BhZ2VzXCIpLFxyXG4gICAgICBjb21wb25lbnRzOiByZXNvbHZlQXBwKFwic3JjL2NvbXBvbmVudHNcIiksXHJcbiAgICAgIGNvbnN0YW50czogcmVzb2x2ZUFwcChcInNyYy9jb25zdGFudHNcIiksXHJcbiAgICAgIGltYWdlczogcmVzb2x2ZUFwcChcInNyYy9pbWFnZXNcIiksXHJcbiAgICAgIHV0aWxzOiByZXNvbHZlQXBwKFwic3JjL3V0aWxzXCIpLFxyXG4gICAgICByb3V0ZXI6IHJlc29sdmVBcHAoXCJzcmMvcm91dGVyXCIpLFxyXG4gICAgICBob29rczogcmVzb2x2ZUFwcChcInNyYy9ob29rc1wiKSxcclxuICAgIH0sXHJcbiAgfSxcclxuICBjc3M6IHtcclxuICAgIHByZXByb2Nlc3Nvck9wdGlvbnM6IHtcclxuICAgICAgc2Nzczoge1xyXG4gICAgICAgIGFkZGl0aW9uYWxEYXRhOiBgQGltcG9ydCBcInNyYy9nbG9iYWwuc2Nzc1wiO2AsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgcGx1Z2luczogW1xyXG4gICAgdnVlKCksXHJcbiAgICBjcmVhdGVTdmdJY29uc1BsdWdpbih7XHJcbiAgICAgIC8vIFx1NjMwN1x1NUI5QVx1OTcwMFx1ODk4MVx1N0YxM1x1NUI1OFx1NzY4NFx1NTZGRVx1NjgwN1x1NjU4N1x1NEVGNlx1NTkzOVxyXG4gICAgICBpY29uRGlyczogW3BhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCBcInNyYy9pbWFnZXMvc3ZnXCIpXSxcclxuICAgICAgLy8gXHU2MzA3XHU1QjlBc3ltYm9sSWRcdTY4M0NcdTVGMEZcclxuICAgICAgc3ltYm9sSWQ6IFwiaWNvbi1bZGlyXS1bbmFtZV1cIixcclxuICAgIH0pLFxyXG4gICAgQ29tcG9uZW50cyh7XHJcbiAgICAgIHJlc29sdmVyczogW0FudERlc2lnblZ1ZVJlc29sdmVyKHsgaW1wb3J0U3R5bGU6IGZhbHNlIH0pXSxcclxuICAgIH0pLFxyXG4gIF0sXHJcbiAgc2VydmVyOiB7XHJcbiAgICBwb3J0OiAzMDAyLFxyXG4gICAgb3BlbjogdHJ1ZSxcclxuICB9LFxyXG59KTtcclxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFtVCxTQUFTLG9CQUFvQjtBQUNoVixPQUFPLFNBQVM7QUFDaEIsT0FBTyxnQkFBZ0I7QUFDdkIsU0FBUyw0QkFBNEI7QUFDckMsT0FBTyxRQUFRO0FBQ2YsT0FBTyxVQUFVO0FBQ2pCLFNBQVMsNEJBQTRCO0FBS3JDLElBQU0sZUFBZSxHQUFHLGFBQWEsUUFBUSxJQUFJLENBQUM7QUFPbEQsSUFBTSxhQUFhLENBQUMsaUJBQWlCLEtBQUssUUFBUSxjQUFjLFlBQVk7QUFFNUUsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsT0FBTztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsV0FBVztBQUFBLEVBQ2I7QUFBQSxFQUNBLFdBQVc7QUFBQSxFQUNYLFNBQVM7QUFBQSxJQUNQLFlBQVksQ0FBQyxPQUFPLEtBQUs7QUFBQSxJQUN6QixPQUFPO0FBQUEsTUFDTCxLQUFLLFdBQVcsS0FBSztBQUFBLE1BQ3JCLE9BQU8sV0FBVyxXQUFXO0FBQUEsTUFDN0IsWUFBWSxXQUFXLGdCQUFnQjtBQUFBLE1BQ3ZDLFdBQVcsV0FBVyxlQUFlO0FBQUEsTUFDckMsUUFBUSxXQUFXLFlBQVk7QUFBQSxNQUMvQixPQUFPLFdBQVcsV0FBVztBQUFBLE1BQzdCLFFBQVEsV0FBVyxZQUFZO0FBQUEsTUFDL0IsT0FBTyxXQUFXLFdBQVc7QUFBQSxJQUMvQjtBQUFBLEVBQ0Y7QUFBQSxFQUNBLEtBQUs7QUFBQSxJQUNILHFCQUFxQjtBQUFBLE1BQ25CLE1BQU07QUFBQSxRQUNKLGdCQUFnQjtBQUFBLE1BQ2xCO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQSxFQUNBLFNBQVM7QUFBQSxJQUNQLElBQUk7QUFBQSxJQUNKLHFCQUFxQjtBQUFBO0FBQUEsTUFFbkIsVUFBVSxDQUFDLEtBQUssUUFBUSxRQUFRLElBQUksR0FBRyxnQkFBZ0IsQ0FBQztBQUFBO0FBQUEsTUFFeEQsVUFBVTtBQUFBLElBQ1osQ0FBQztBQUFBLElBQ0QsV0FBVztBQUFBLE1BQ1QsV0FBVyxDQUFDLHFCQUFxQixFQUFFLGFBQWEsTUFBTSxDQUFDLENBQUM7QUFBQSxJQUMxRCxDQUFDO0FBQUEsRUFDSDtBQUFBLEVBQ0EsUUFBUTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLEVBQ1I7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
